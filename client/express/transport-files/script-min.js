class Widget{constructor(a){this.el=a,this.addMessageBtn=a.querySelector('.support_widget__button'),this.addMessageInput=a.querySelector('.support_widget__entry'),this.dialog=a.querySelector('.support_widget__mess-list'),this.giveEventsForButtons()}giveEventsForButtons(){this.el.querySelector('#support_widget__close').addEventListener('click',()=>this.turn()),this.el.querySelector('.support_widget__header-button').addEventListener('click',()=>this.turn())}turn(){this.el.classList.toggle('support_widget_container--closed')}addMessage(a){var b=document.createElement('LI');b.className='client'===a.sender.type?'support_widget__mess-item support_widget__mess-user':'support_widget__mess-item support_widget__mess-admin';var c=document.createElement('SPAN');c.className='support_widget__mess-info',b.appendChild(c);var d=document.createElement('SPAN');d.className='support_widget__mess-name',d.innerText=a.sender.name,c.appendChild(d);var e=document.createElement('SPAN');e.className='support_widget__mess-date',e.innerText=new Date(a.time).toDateString(),c.appendChild(e),b.innerHTML+=a.text,this.dialog.appendChild(b),b.scrollIntoView()}addDialog(a){a.forEach(b=>this.addMessage(b))}loginOff(){this.el.querySelector('#login').style.display='none'}}const messageEvents={setToken:function(a){localStorage.setItem('token',a.token)},getDialog:function(a){widget.addDialog(a.dialog)},getLastMessage:function(a){widget.addMessage(a.message)}},wsEvents={onMessage:function(a){const b=JSON.parse(a.data);this.messageEvents[b.event].call(this,b.data)},onOpen:function(){var a=localStorage.getItem('token');a&&this.send('continueDialog',{token:a})},onError:function(){throw alert('Not Catched error'),new Error('Not Catched error')},onClone:function(){throw alert('Close the contection with server'),new Error('Close the contection with server')}};class WSServer{constructor(a,b){this.ws=new WebSocket('ws://'+a+':'+b),this.messageEvents=messageEvents,this._setWsEvents()}_setWsEvents(){this.ws.onmessage=wsEvents.onMessage.bind(this),this.ws.onopen=wsEvents.onOpen.bind(this),this.ws.onclose=wsEvents.onClone.bind(this),this.ws.onerror=wsEvents.onError.bind(this)}on(a,b){this.messageEvents[a]=b}send(a,b){this.ws.send(JSON.stringify({event:a,data:b}))}}function addClient(){widget.el.querySelector('.support_widget__name-button').onclick=()=>{wsServer.send('addClient',{name:widget.el.querySelector('.support_widget__name-input').value,token:localStorage.getItem('token')}),widget.loginOff(),widget.addMessageBtn.disabled=!1}}function checkToken(){localStorage.getItem('token')?widget.loginOff():(addClient(),widget.addMessageBtn.disabled=!0)}function senderMessage(){wsServer.send('addMessage',{token:localStorage.getItem('token'),text:widget.addMessageInput.value}),widget.addMessageInput.placeholder='',widget.addMessageInput.value=''}var widget=new Widget(document.querySelector('.support_widget')),wsServer=new WSServer('localhost',5e3);checkToken(),widget.addMessageBtn.addEventListener('click',senderMessage);